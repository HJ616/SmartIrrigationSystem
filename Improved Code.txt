#include Servo.h
#include avrsleep.h

const int soilMoisturePin = A0;
const int potentiometerPin = A1;
const int pumpPin = 9;
const int buzzerPin = 8;
const int ledPin = 7;
const int buttonPin = 2;
Servo servoMotor;

void wakeUp() {
   Empty handler for waking up from sleep mode
}

void setup() {
  pinMode(soilMoisturePin, INPUT);
  pinMode(potentiometerPin, INPUT);
  pinMode(pumpPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);
  pinMode(buttonPin, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(buttonPin), wakeUp, FALLING);

  servoMotor.attach(10);

  Serial.begin(9600);
}

void loop() {
   Enter sleep mode if the button is not pressed
  if (digitalRead(buttonPin) == HIGH) {
    set_sleep_mode(SLEEP_MODE_PWR_DOWN);
    sleep_enable();
    attachInterrupt(digitalPinToInterrupt(buttonPin), wakeUp, FALLING);
    sleep_mode();
    sleep_disable();
    detachInterrupt(digitalPinToInterrupt(buttonPin));
  }

   Read potentiometer value and map it to a moisture threshold
  int potValue = analogRead(potentiometerPin);
  int moistureThreshold = map(potValue, 0, 1023, 0, 1023);

   Read soil moisture
  int soilMoisture = analogRead(soilMoisturePin);
  Serial.print(Soil Moisture );
  Serial.print(soilMoisture);
  Serial.print(  Threshold );
  Serial.println(moistureThreshold);

   Water the plants if soil moisture is below threshold
  if (soilMoisture  moistureThreshold) {
    digitalWrite(pumpPin, HIGH);
    servoMotor.write(90);
    tone(buzzerPin, 1000, 100);
    for (int i = 0; i  3; i++) {
      digitalWrite(ledPin, HIGH);
      delay(100);
      digitalWrite(ledPin, LOW);
      delay(100);
    }
    delay(5000);  Watering duration
    digitalWrite(pumpPin, LOW);
    servoMotor.write(0);
    tone(buzzerPin, 500, 100);
    for (int i = 0; i  3; i++) {
      digitalWrite(ledPin, HIGH);
      delay(100);
      digitalWrite(ledPin, LOW);
      delay(100);
    }
  }

  delay(1000);  Check soil moisture every second
}
